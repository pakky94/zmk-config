/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define L_COLEMAK 0
#define L_NOMODS 1
#define L_QWERTY 2
#define L_LOWER 3
#define L_RAISE 4
#define L_FUNC 5

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | TAB  |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L   |  U  |  Y  |  ;  | BKSP |
// | ESC  |  A  |  R  |  S  |  T  |  G  |   |  M  |  N   |  E  |  I  |  O  |  '   |
// | CTRL |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp TAB  &kp Q      &kp W      &kp F       &kp P       &kp B   &kp J &kp L        &kp U       &kp Y      &kp SEMI   &kp BSPC
   &kp ESC  &mt LGUI A &mt LALT R &mt LSHFT S &mt LCTRL T &kp G   &kp M &mt LCTRL N  &mt LSHFT E &mt LALT I &mt LGUI O &kp SQT
   &kp LCTRL &kp Z      &kp X      &kp C       &kp D       &kp V   &kp K &kp H        &kp COMMA   &kp DOT    &kp FSLH   &kp ESC
                  &kp LGUI &lt L_LOWER BSPC &lt L_FUNC SPACE    &lt L_FUNC SPACE &lt L_RAISE RET &kp RALT
                        >;
                };

                nomods_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
   &trans &kp A  &kp R  &kp S  &kp T  &trans &trans &kp N  &kp E  &kp I  &kp O  &trans
   &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
                    &trans &trans &kp SPACE    &kp SPACE &trans &trans
                        >;
                };

                qwerty_layer {
// | TAB  |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L   |  U  |  Y  |  ;  | BKSP |
// | ESC  |  A  |  R  |  S  |  T  |  G  |   |  M  |  N   |  E  |  I  |  O  |  '   |
// | CTRL |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp TAB   &kp Q      &kp W      &kp E       &kp R       &kp T   &kp Y &kp U        &kp I       &kp O      &kp P         &kp BSPC
   &kp ESC   &mt LGUI A &mt LALT S &mt LSHFT D &mt LCTRL F &kp G   &kp H &mt LCTRL J  &mt LSHFT K &mt LALT L &mt LGUI SEMI &kp SQT
   &kp LCTRL &kp Z      &kp X      &kp C       &kp V       &kp B   &kp N &kp M        &kp COMMA   &kp DOT    &kp FSLH      &kp ESC
                  &kp LGUI &lt L_LOWER BSPC &lt L_FUNC SPACE    &lt L_FUNC SPACE &lt L_RAISE RET &kp RALT
                        >;
                };

                lower_layer {
// -----------------------------------------------------------------------------------------
// |     |     |     |     |     |     |   |  /  |  7  |  8  |  9  |  -  |     |
// |     | ESC | TAB |     |     |     |   |  *  |  4  |  5  |  6  |  +  |     |
// |     | DEL | RALT| CW  |     |     |   |  .  |  1  |  2  |  3  | RET |     |
/                    |     |     |     |   |     |     |     |
                        bindings = <
   &trans   &trans   &trans   &trans   &trans   &trans        &kp FSLH &kp N7   &kp N8   &kp N9   &kp MINUS &trans
   &trans   &kp ESC  &kp TAB  &trans   &trans   &trans        &kp STAR &kp N4   &kp N5   &kp N6   &kp PLUS  &trans
   &trans   &kp DEL  &kp RALT &caps_word &trans &trans        &kp DOT  &kp N1   &kp N2   &kp N3   &kp RET   &trans
                              &trans   &trans   &trans        &trans   &kp N0   &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |     |  _  |  +  |  (  |  )  |     |   |  \  |  &  |  *  |     |  `  |     |
// |     |  -  |  =  |  {  |  }  |     |   |  |  |  $  |  %  |  ^  |  '  |     |
// |     |     | RALT|  [  |  ]  |     |   |  ~  |  !  |  @  |  #  |  "  |     |
/                    |     |     |     |   |     |     |     |
                        bindings = <
   &trans  &kp UNDER &kp PLUS  &kp LPAR &kp RPAR &trans        &kp BSLH  &kp AMPS &kp STAR  &trans    &kp GRAVE &trans
   &trans  &kp MINUS &kp EQUAL &kp LBRC &kp RBRC &trans        &kp PIPE  &kp DLLR &kp PRCNT &kp CARET &kp SQT   &trans
   &trans  &trans    &kp RALT  &kp LBKT &kp RBKT &trans        &kp TILDE &kp EXCL &kp AT    &kp HASH  &kp DQT   &trans
                              &trans   &trans   &trans        &trans   &kp N0   &trans
                        >;
                };

                func_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                             &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
        };
};
